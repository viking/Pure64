### COMMAND OPTIONS

# If you're using a specific nasm binary, run make like:
# NASM=/path/to/nasm make -e
NASM = nasm
# If running on OS X, change this to hdiutil
DISKUTIL = parted


### MAKE OPTIONS

# KERNELPATH specifies a path to a binary file to chain-load from pure64.sys.
# Used for "make pxe" as well as the filesystem variants, where it overrides
# the default kernel load logic for that filesystem (making the KERNEL macro
# irrelevant). MUST be specified for "make pxe", e.g.:
# make pxe KERNELPATH=/path/to/kernel64.sys
KERNELPATH = ""
# HDD specifies the hard disk interface type.
# Options: PIO or AHCI
HDD = PIO
# FS specifies the expected filesystem (not relevant for PXE).
# Options: BMFS
FS = BMFS
# IMAGESIZE specifies the desired size (in MiB) of the output disk image
# generated by the "make vmdk" and "make raw" commands. Defaults to 10MiB.
IMAGESIZE = 16


_build:
	mkdir -p build

pxestart.bin: _build
	${NASM} -Isrc/ src/bootsectors/pxestart.asm -o build/pxestart.bin

BMFSmbr.bin: _build
ifeq (${KERNELPATH},"")
	${NASM} -Isrc/ src/bootsectors/bmfs_mbr.asm -o build/BMFSmbr.bin
else
	${NASM} -Isrc/ src/bootsectors/bmfs_mbr.asm -o build/BMFSmbr.bin \
		 -dPURE64_CHAIN_LOADING
endif

pure64.sys: _build
ifeq (${KERNELPATH},"")
	${NASM} -Isrc/ src/pure64.asm -o build/pure64.sys -dHDD=${HDD} -dFS=${FS}
else
	${NASM} -Isrc/ src/pure64.asm -o build/pure64.sys -dHDD=${HDD} -dFS=${FS} \
		-dPURE64_CHAIN_LOADING
	cat build/pure64.sys ${KERNELPATH} > build/pure64chain.sys
	mv build/pure64chain.sys build/pure64.sys
endif

pxe: _build pxestart.bin pure64.sys
	cat build/pxestart.bin build/pure64.sys > build/pxeboot.bin

img: _build ${FS}mbr.bin pure64.sys
ifeq (${FS},BMFS)
	dd if=/dev/zero of=build/system.img bs=1048576 count=${IMAGESIZE}
	dd if=build/${FS}mbr.bin of=build/system.img bs=512 conv=notrunc
	dd if=build/pure64.sys of=build/system.img bs=512 conv=notrunc seek=16
endif

vmdk: _build img
	cp build/system.img build/system-flat.vmdk

clean:
	rm -r build

